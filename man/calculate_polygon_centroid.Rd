% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_polygon_centroid.R
\name{calculate_polygon_centroid}
\alias{calculate_polygon_centroid}
\title{Calculate the centroid of a polygon}
\usage{
calculate_polygon_centroid(sf_df, id)
}
\arguments{
\item{sf_df}{A sf object with polygons}

\item{id}{A character string with the name of the column containing the unique identifier}
}
\value{
A data frame with the unique identifier, latitude, longitude and uncertainty of the centroid
}
\description{
This function calculates the centroid of a polygon and returns the latitude, longitude and uncertainty of the centroid.
}
\examples{
\dontrun{
# Example of how to use the calculate_polygon_centroid function
# Load the necessary data
boswachterijen <- boswachterijen$boswachterijen_2024

# add a unique identifier to the sf object
boswachterijen <- boswachterijen \%>\%
dplyr::mutate(UUID = as.character(row_number()))

# Calculate the centroid of the polygons
centroids_data_final <- calculate_polygon_centroid(sf_df = boswachterijen, id = "UUID")

# Plot the polygons and the centroids
library(leaflet)

# Sample 1 polygon and 1 centroid to plot using id
sample_id <- sample(centroids_data_final$UUID, 1)

leaflet() \%>\%
  addProviderTiles("CartoDB.Positron") \%>\%
  addPolygons(data = boswachterijen \%>\% dplyr::filter(UUID == sample_id),
              weight = 1, color = "black", fillOpacity = 0.5) \%>\%
  addCircles(data = centroids_data_final \%>\% dplyr::filter(UUID == sample_id),
             lat = ~centroidLatitude, lng = ~centroidLongitude, radius = 5,
             color = "black") \%>\%
  addCircles(data = centroids_data_final \%>\% dplyr::filter(UUID == sample_id),
             lat = ~centroidLatitude, lng = ~centroidLongitude, radius = ~centroidUncertainty,
             color = "red", weight = 1)
}

}
\author{
Sander Devisscher
}
